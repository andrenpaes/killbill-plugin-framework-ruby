###################################################################################
#                                                                                 #
#                   Copyright 2010-2013 Ning, Inc.                                #
#                                                                                 #
#      Ning licenses this file to you under the Apache License, version 2.0       #
#      (the "License"); you may not use this file except in compliance with the   #
#      License.  You may obtain a copy of the License at:                         #
#                                                                                 #
#          http://www.apache.org/licenses/LICENSE-2.0                             #
#                                                                                 #
#      Unless required by applicable law or agreed to in writing, software        #
#      distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  #
#      WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the  #
#      License for the specific language governing permissions and limitations    #
#      under the License.                                                         #
#                                                                                 #
###################################################################################


#
#                       DO NOT EDIT!!!
#    File automatically generated by killbill-java-parser (git@github.com:killbill/killbill-java-parser.git)
#


module Killbill
  module Plugin
    module Model

      java_package 'com.ning.billing.payment.api'
      class PaymentAttempt

        include com.ning.billing.payment.api.PaymentAttempt

        attr_accessor :id, :created_date, :updated_date, :effective_date, :gateway_error_code, :gateway_error_msg, :payment_status

        def initialize()
        end

        def to_java()
          # conversion for id [type = java.util.UUID]
          id = java.util.UUID.fromString(id.to_s) if !id.nil?

          # conversion for created_date [type = org.joda.time.DateTime]
          if !created_date.nil?
            created_date =  (created_date.kind_of? Time) ? DateTime.parse(created_date.to_s) : created_date
            created_date = Java::org.joda.time.DateTime.new(created_date.to_s, Java::org.joda.time.DateTimeZone::UTC)
          end

          # conversion for updated_date [type = org.joda.time.DateTime]
          if !updated_date.nil?
            updated_date =  (updated_date.kind_of? Time) ? DateTime.parse(updated_date.to_s) : updated_date
            updated_date = Java::org.joda.time.DateTime.new(updated_date.to_s, Java::org.joda.time.DateTimeZone::UTC)
          end

          # conversion for effective_date [type = org.joda.time.DateTime]
          if !effective_date.nil?
            effective_date =  (effective_date.kind_of? Time) ? DateTime.parse(effective_date.to_s) : effective_date
            effective_date = Java::org.joda.time.DateTime.new(effective_date.to_s, Java::org.joda.time.DateTimeZone::UTC)
          end

          # conversion for gateway_error_code [type = java.lang.String]
          gateway_error_code = gateway_error_code.to_s if !gateway_error_code.nil?

          # conversion for gateway_error_msg [type = java.lang.String]
          gateway_error_msg = gateway_error_msg.to_s if !gateway_error_msg.nil?

          # conversion for payment_status [type = com.ning.billing.payment.api.PaymentStatus]
          payment_status = "Java::com.ning.billing.payment.api.PaymentStatus::#{payment_status.to_s}" if !payment_status.nil?
        end

        def self.to_ruby(j_obj)
          # conversion for id [type = java.util.UUID]
          id = j_obj.id
          id = id.nil? ? nil : uuid.to_s

          # conversion for created_date [type = org.joda.time.DateTime]
          created_date = j_obj.created_date
          if !created_date.nil?
            fmt = Java::org.joda.time.format.ISODateTimeFormat.date_time
            str = fmt.print(created_date)
            created_date = DateTime.iso8601(str)
          end

          # conversion for updated_date [type = org.joda.time.DateTime]
          updated_date = j_obj.updated_date
          if !updated_date.nil?
            fmt = Java::org.joda.time.format.ISODateTimeFormat.date_time
            str = fmt.print(updated_date)
            updated_date = DateTime.iso8601(str)
          end

          # conversion for effective_date [type = org.joda.time.DateTime]
          effective_date = j_obj.effective_date
          if !effective_date.nil?
            fmt = Java::org.joda.time.format.ISODateTimeFormat.date_time
            str = fmt.print(effective_date)
            effective_date = DateTime.iso8601(str)
          end

          # conversion for gateway_error_code [type = java.lang.String]
          gateway_error_code = j_obj.gateway_error_code

          # conversion for gateway_error_msg [type = java.lang.String]
          gateway_error_msg = j_obj.gateway_error_msg

          # conversion for payment_status [type = com.ning.billing.payment.api.PaymentStatus]
          payment_status = j_obj.payment_status
          payment_status = payment_status.to_s if !payment_status.nil?
        end

      end
    end
  end
end
