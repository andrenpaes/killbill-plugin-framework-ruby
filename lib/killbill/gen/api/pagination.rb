###################################################################################
#                                                                                 #
#                   Copyright 2010-2013 Ning, Inc.                                #
#                                                                                 #
#      Ning licenses this file to you under the Apache License, version 2.0       #
#      (the "License"); you may not use this file except in compliance with the   #
#      License.  You may obtain a copy of the License at:                         #
#                                                                                 #
#          http://www.apache.org/licenses/LICENSE-2.0                             #
#                                                                                 #
#      Unless required by applicable law or agreed to in writing, software        #
#      distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  #
#      WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the  #
#      License for the specific language governing permissions and limitations    #
#      under the License.                                                         #
#                                                                                 #
###################################################################################


#
#                       DO NOT EDIT!!!
#    File automatically generated by killbill-java-parser (git@github.com:killbill/killbill-java-parser.git)
#


module Killbill
  module Plugin
    module Model

      java_package 'com.ning.billing.util.entity'
      class Pagination

        include com.ning.billing.util.entity.Pagination

        attr_accessor :iterator, :current_offset, :next_offset, :total_nb_results, :nb_results, :nb_results_from_offset

        def initialize()
        end

        def to_java()
          # conversion for iterator [type = java.util.Iterator]
          @iterator = Killbill::Plugin::Model::EnumeratorIterator.new(@iterator)

          # conversion for current_offset [type = java.lang.Long]
          @current_offset = @current_offset

          # conversion for next_offset [type = java.lang.Long]
          @next_offset = @next_offset

          # conversion for total_nb_results [type = java.lang.Long]
          @total_nb_results = @total_nb_results

          # conversion for nb_results [type = java.lang.Long]
          @nb_results = @nb_results

          # conversion for nb_results_from_offset [type = java.lang.Long]
          @nb_results_from_offset = @nb_results_from_offset
          self
        end

        def to_ruby(j_obj)
          # conversion for iterator [type = java.util.Iterator]
          @iterator = j_obj.iterator

          # conversion for current_offset [type = java.lang.Long]
          @current_offset = j_obj.current_offset

          # conversion for next_offset [type = java.lang.Long]
          @next_offset = j_obj.next_offset

          # conversion for total_nb_results [type = java.lang.Long]
          @total_nb_results = j_obj.total_nb_results

          # conversion for nb_results [type = java.lang.Long]
          @nb_results = j_obj.nb_results

          # conversion for nb_results_from_offset [type = java.lang.Long]
          @nb_results_from_offset = j_obj.nb_results_from_offset
          self
        end

      end
    end
  end
end
